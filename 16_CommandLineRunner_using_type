package com.sdle.pro1.eosb;

import com.sdle.pro1.eosb.event.UserLoginEvent;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationEventPublisher;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.core.annotation.Order;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.stereotype.Component;

import java.sql.Date;
import java.time.LocalDateTime;
import java.time.LocalTime;


@EnableAsync
@SpringBootApplication
public class EngineeringOnSpringbootApplication implements CommandLineRunner {
	public static void main(String[] args) throws InterruptedException {
		ApplicationContext context= SpringApplication.run(EngineeringOnSpringbootApplication.class,args);
		//ConfigurableApplicationContext context=new AnnotationConfigApplicationContext(EngineeringOnSpringbootApplication.class);

	}
	@Autowired
	private ApplicationEventPublisher publisher;
	@Override
	@Order(1)
	public void run(String... args) throws Exception {
		publisher.publishEvent(new UserLoginEvent());
	}

	@Bean
	public CommandLineRunner commandLineRunner(){
		return new CommandLineRunner() {
			@Override
			@Order(3)
			public void run(String... args) throws Exception {
				System.out.println("3rd cli runner");
			}
		};
	}
}

@Component
class MyClass implements CommandLineRunner{

	@Override
	@Order(2)
	public void run(String... args) throws Exception {
		System.out.println("2nd cli runner");
	}
}
