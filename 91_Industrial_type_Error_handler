package com.sdle.pro1.eosb.model;
public record Student(int id,String name,double cpga) {
}


package com.sdle.pro1.eosb.exception;
public class ResourseNotFoundException extends RuntimeException{
    public ResourseNotFoundException(String message) {
        super(message);
    }
}




package com.sdle.pro1.eosb.contorller;
import com.sdle.pro1.eosb.exception.ResourseNotFoundException;
import com.sdle.pro1.eosb.model.ResponseError;
import com.sdle.pro1.eosb.model.Student;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@RestController
@RequestMapping("/api/v1")
public class StudentController {
    private final List<Student>students=new ArrayList<>();
    public StudentController(){
        students.add(new Student(101,"Rakib",3.45f));
        students.add(new Student(102,"Mosa",4.00f));
    }
    @GetMapping("/students")
    public List<Student>students(){
        return students;
    }
    @GetMapping("/student")
    public Student student(@RequestParam("id")int id){
      return   students.stream()
                .filter(s->s.id()==id)
                .findFirst()
                .orElseThrow(()->new ResourseNotFoundException("Student not found by id [%s]".formatted(id)));

    }
}


import java.time.Instant;
import java.util.Map;
@ControllerAdvice
public class GlobalExceptionHandler {
    @ResponseBody
    @ResponseStatus(HttpStatus.NOT_FOUND)
    @ExceptionHandler(ResourseNotFoundException.class)
    public ResponseError resouceNotFound(ResourseNotFoundException exception){
       return new ResponseError(
                HttpStatus.NOT_FOUND.value(),
                HttpStatus.NOT_FOUND.toString(),
                exception.getMessage()
        );
    }
}




