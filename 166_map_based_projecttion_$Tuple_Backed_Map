package com.sdlc.pro.edj.repository;

import com.sdlc.pro.edj.entity.Product;
import jakarta.persistence.LockModeType;
import org.springframework.data.domain.*;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Lock;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.util.Streamable;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

@Repository
public interface ProductRepository extends JpaRepository<Product,Integer> {

   @Query("select p.id as id,p.name as name,p.price as price from Product p where p.id=?1")
   Map<String,?> findProductById(Integer id);

}



package com.sdlc.pro.edj;


import com.sdlc.pro.edj.config.PgsqlDatabaseConfig;
import com.sdlc.pro.edj.entity.Category;
import com.sdlc.pro.edj.entity.Product;
import com.sdlc.pro.edj.entity.StudentEntity;
import com.sdlc.pro.edj.repository.PgSqlStudentRepositoryCustom;
import com.sdlc.pro.edj.repository.PgsqlStudentRepository;
import com.sdlc.pro.edj.repository.ProductRepository;
import jakarta.persistence.*;
import jakarta.persistence.spi.ClassTransformer;
import jakarta.persistence.spi.PersistenceProvider;
import jakarta.persistence.spi.PersistenceUnitInfo;
import jakarta.persistence.spi.PersistenceUnitTransactionType;
import org.hibernate.jpa.HibernatePersistenceProvider;
import org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.SpringBootConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.ApplicationContext;
import org.springframework.data.domain.*;
import org.springframework.data.repository.Repository;
import org.springframework.data.support.WindowIterator;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.interceptor.TransactionAspectSupport;

import javax.sql.DataSource;
import java.io.PrintWriter;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.SQLFeatureNotSupportedException;
import java.util.*;
import java.util.function.Function;
import java.util.logging.Logger;


@SpringBootApplication(
        exclude = {
                DataSourceAutoConfiguration.class,
                HibernateJpaAutoConfiguration.class,
                TransactionAutoConfiguration.class,
                JpaRepositoriesAutoConfiguration.class
        }
)
public class EsobDataJpaApplication implements CommandLineRunner {


	@Autowired
    private PgsqlStudentRepository pgsqlStudentRepository;

	@Autowired
	private ProductRepository productRepository;


	@Override
	@Transactional
	public void run(String... args) throws Exception {

        var map=productRepository.findProductById(4);
        System.out.println(map);
		//System.out.println(map.get("id")+" , "+ map.get("name")+" , "+ map.get("price"));
	}

	public static void main(String[] args) throws Exception {
        SpringApplication.run(EsobDataJpaApplication.class,args);
		
	}


}



