<!DOCTYPE html>
<html lang="en">
<head>
    <title>App Request Stat</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/data.js"></script>
    <script src="https://code.highcharts.com/modules/drilldown.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <figure class="highcharts-figure">
                <div id="request-count-chart"></div>
            </figure>
        </div>

        <div class="col-sm-6">
            <figure class="highcharts-figure">
                <div id="page-visit-chart"></div>
            </figure>
        </div>
    </div>

    <h2>Request Table</h2>
    <p>This 'Request Table' show you the all request stat</p>
    <table class="table table-bordered">
        <thead>
        <tr>
            <th>SL No.</th>
            <th>IP Address</th>
            <th>Method</th>
            <th>Path</th>
            <th>Page Name</th>
            <th>Time</th>
            <th>Handler Thread</th>
            <th>Time consumed</th>
        </tr>
        </thead>
        <tbody id="stat-table">
        </tbody>
    </table>
</div>

<script>
    function fetchAndPopulateStat() {
        /*
        stats:
        [
            {
                ip: String,
                method: String ,
                path: String,
                pageName: String ,
                time: String ,
                thread: String ,
                consumedTime: long
            }
        ]
         */
        $.get('/analytics/request-stat', function (stats){
            let reqCountByTime = new Map();
            let pageVisitCount = new Map();
            let tableRows = '';
            stats.forEach(function (stat, index) {
                let time = stat.time;
                reqCountByTime.set(time, reqCountByTime.has(time) ? reqCountByTime.get(time) + 1 : 1);

                let page = stat.pageName;
                if (page != null) {
                    pageVisitCount.set(page, pageVisitCount.has(page) ? pageVisitCount.get(page) + 1 : 1);
                }

                tableRows += `<tr>
                         <td>${index + 1}</td>
                         <td>${stat.ip}</td>
                         <td>${stat.method}</td>
                         <td>${stat.path}</td>
                         <td>${page == null ? "Not Page (API Call)" : page}</td>
                         <td>${time}</td>
                         <td>${stat.thread}</td>
                         <td>${stat.consumedTime} ms</td>
                      </tr>`;
            });

            populateRequestCountChart(reqCountByTime);
            populatePageVisitChart(pageVisitCount);
            populateTable(tableRows);
        });
    }

    function populateTable(tableRows) {
        $("#stat-table").empty();
        $("#stat-table").append(tableRows);
    }

    function populateRequestCountChart(reqCountByTime) {
        let data = [];
        reqCountByTime.forEach(function (val, key) {
            data.push([key, val]);
        });

        Highcharts.chart('request-count-chart', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Requests Count VS Time Stat'
            },
            subtitle: {

                text: 'This chart is showing the total amount of request per seconds'
            },
            xAxis: {
                type: 'category',
                labels: {
                    autoRotation: [-45, -90],
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Request Counts'
                }
            },
            legend: {
                enabled: false
            },
            tooltip: {
                pointFormat: 'total request <b>{point.y}</b>'
            },
            series: [{
                name: 'Request Count VS Time',
                colorByPoint: true,
                groupPadding: 0,
                data: data,
                dataLabels: {
                    enabled: true,
                    rotation: -90,
                    color: '#FFFFFF',
                    inside: true,
                    verticalAlign: 'top',
                    format: '{point.y:.1f}', // one decimal
                    y: 10, // 10 pixels down from the top
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            }]
        });



    }

    function populatePageVisitChart(pageVisitCount) {
        let data = [];
        pageVisitCount.forEach(function (val, key){
            data.push({name: key, y: val});
        });

        Highcharts.chart('page-visit-chart', {
            chart: {
                type: 'pie'
            },
            title: {
                text: 'Page Visit Stat',
            },
            subtitle: {
                text: 'This chat is showing the specific "page visit" count',
            },

            accessibility: {
                announceNewData: {
                    enabled: true
                },
                point: {
                    valueSuffix: ''
                }
            },

            plotOptions: {
                series: {
                    borderRadius: 5,
                    dataLabels: [{
                        enabled: true,
                        distance: 15,
                        format: '{point.name}'
                    }, {
                        enabled: true,
                        distance: '-30%',
                        filter: {
                            property: 'percentage',
                            operator: '>',
                            value: 5
                        },
                        format: '{point.y}',
                        style: {
                            fontSize: '0.9em',
                            textOutline: 'none'
                        }
                    }]
                }
            },

            tooltip: {
                //headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y}</b> of total<br/>'
            },

            series: [
                {
                    colorByPoint: true,
                    data: data
                }
            ],
        });

    }

    function refreshState(){
        fetchAndPopulateStat();
        setTimeout(function (){
            refreshState();
        },5000);
    }

    $(document).ready(function () {
       refreshState();
    });
</script>
</body>
</html>
