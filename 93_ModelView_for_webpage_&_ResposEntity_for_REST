package com.sdle.pro1.eosb.exhandler;

import com.sdle.pro1.eosb.exception.ResourseNotFoundException;
import com.sdle.pro1.eosb.interfaces.MvcControllerIdentifier;
import com.sdle.pro1.eosb.model.ResponseError;
import jakarta.servlet.http.HttpServletRequest;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.servlet.ModelAndView;

import java.util.Map;

@ControllerAdvice
public class GlobalMvcExceptionHandler {
    @ExceptionHandler(ResourseNotFoundException.class)
    public Object resouceNotFoundHandler(ResourseNotFoundException exception, HttpServletRequest request){
        var accepts=request.getHeader(HttpHeaders.ACCEPT);
        if(accepts.contains(MediaType.TEXT_HTML_VALUE)) {
            return new ModelAndView("resource_error",
                    Map.of("error", ResourseNotFoundException.class.getSimpleName(),
                            "message", exception.getMessage())
            );
        }
        var error=new ResponseError(
                HttpStatus.NOT_FOUND.value(),
                HttpStatus.NOT_FOUND.toString(),
                exception.getMessage()
        );
        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(error);
    }
}
