package com.sdle.pro1.eosb.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.core.env.Environment;
import org.springframework.http.HttpHeaders;
import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.CorsConfigurationSource;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
import org.springframework.web.filter.CorsFilter;

import java.util.List;

@Configuration
public class AppConfig {

    @Autowired
    private Environment env;



    @Bean
    public CorsFilter corsFilter(){
        CorsConfiguration config=new CorsConfiguration();
        config.setAllowedOrigins(List.of("http://localhost:3000","http://localhost:5000"));
        config.setAllowedMethods(List.of("GET","POST"));
        config.setAllowedHeaders(List.of(HttpHeaders.CONTENT_TYPE,HttpHeaders.AUTHORIZATION));
        config.addExposedHeader("custom-header");
        config.setAllowCredentials(true);
        config.setMaxAge(10L);


        UrlBasedCorsConfigurationSource source=new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**",config);
        CorsFilter corsFilter=new CorsFilter(source);
        return corsFilter;
    }




    @Bean
    public RestTemplate restTemplate(){
        return new RestTemplate();
    }


    @Bean
    public ThreadPoolTaskExecutor ourTaskExecutor(@Value("${pool.max.size}") int max){
        ThreadPoolTaskExecutor executor=new ThreadPoolTaskExecutor();
        executor.setCorePoolSize(Integer.parseInt(env.getProperty("pool.core.size")));
        executor.setMaxPoolSize(max);
        executor.setQueueCapacity(50);
        executor.initialize();
        executor.setThreadNamePrefix("sdle-por-exe-");
        return executor;
    }
     @Bean
     public String SimStr(){
         return "this is simple bean";
     }



}
