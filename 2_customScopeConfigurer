
@SpringBootApplication
public class EngineeringOnSpringbootApplication {
	public static void main(String[] args) throws InterruptedException {
		ConfigurableApplicationContext context=SpringApplication.run(EngineeringOnSpringbootApplication.class, args);
		//ConfigurableApplicationContext context=new AnnotationConfigApplicationContext(EngineeringOnSpringbootApplication.class);
		System.out.println(context.getBean(TimedBean.class));
		
	}
}


@Component
@Scope("timed")
public class TimedBean {

    @PreDestroy
    public void destroy(){
        System.out.println("destroy succesfully");
    }
}

public class TimedScope implements Scope {
    @Override
    public Object get(String name, ObjectFactory<?> objectFactory) {
       return objectFactory.getObject();
    }

    @Override
    public void registerDestructionCallback(String name, Runnable callback) {

    }

    @Override
    public Object resolveContextualObject(String key) {
        return null;
    }

    @Override
    public String getConversationId() {
        return UUID.randomUUID().toString();
    }
}



@Configuration
public class AppConfig {

    @Bean
    CustomScopeConfigurer customScopeConfigurer(){
        CustomScopeConfigurer customScopeConfigurer=new CustomScopeConfigurer();
        customScopeConfigurer.addScope("timed", new TimedScope1());
        return customScopeConfigurer;
    }
   
}
